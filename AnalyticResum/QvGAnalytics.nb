(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    199758,       4015]
NotebookOptionsPosition[    197223,       3927]
NotebookOutlinePosition[    197581,       3943]
CellTagsIndexPosition[    197538,       3940]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["NLL Angularities with Shape Function", "Section",
 CellChangeTimes->{{3.647000205977405*^9, 3.6470002128158827`*^9}, {
  3.6494563930144873`*^9, 3.649456396117321*^9}}],

Cell[CellGroupData[{

Cell["Baseline Values", "Subsection",
 CellChangeTimes->{{3.649451400737648*^9, 3.649451403249867*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]sCR\[LetterSpace]baseline", "=", "0.117998"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"0.1184", ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NF\[LetterSpace]baseline", " ", "=", " ", "5"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R\[LetterSpace]baseline", "  ", "=", " ", "0.6"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Q\[LetterSpace]baseline", " ", "=", " ", "200.0"}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalOmega]0\[LetterSpace]baseline", " ", "=", " ", "0.350"}], 
  ";", "  ", 
  RowBox[{"(*", 
   RowBox[{
   "in", " ", "GeV", " ", "this", " ", "number", " ", "needs", " ", "to", " ",
     "be", " ", "checked"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[CapitalOmega]0\[LetterSpace]tiny", " ", "=", " ", "0.00001"}], 
  ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"used", " ", "for", " ", "quasi"}], "-", 
    RowBox[{"parton", " ", "cross", " ", "check"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}]}], "Input",
 CellChangeTimes->{{3.649451411379245*^9, 3.6494514114832*^9}, {
  3.649453420832683*^9, 3.649453421806189*^9}, {3.649453508978414*^9, 
  3.64945352650065*^9}, {3.649455640448222*^9, 3.64945566122262*^9}, {
  3.649456416575849*^9, 3.649456428940464*^9}, {3.649494368231875*^9, 
  3.649494370954404*^9}, {3.649501210276277*^9, 3.649501215641719*^9}, {
  3.649501381212534*^9, 3.649501382172284*^9}, {3.649503120483656*^9, 
  3.6495031212388144`*^9}, {3.649514788092613*^9, 3.6495148117909403`*^9}, {
  3.649515255278817*^9, 3.649515256107174*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Physical Constants", "Subsection",
 CellChangeTimes->{{3.649450745337008*^9, 3.649450746032426*^9}, {
  3.64945141808084*^9, 3.649451419193063*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mZ", "=", "91.19"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]0", "=", 
   RowBox[{
    FractionBox["11", 
     RowBox[{"4", "\[Pi]"}]], "-", 
    FractionBox["5", 
     RowBox[{"6", "\[Pi]"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Beta]1", "=", 
   RowBox[{
    FractionBox["153", 
     RowBox[{"24", 
      SuperscriptBox["\[Pi]", "2"]}]], "-", 
    FractionBox["75", 
     RowBox[{"24", 
      SuperscriptBox["\[Pi]", "2"]}]], "-", 
    FractionBox["20", 
     RowBox[{"24", 
      SuperscriptBox["\[Pi]", "2"]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"K", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["67", "6"], "-", 
      FractionBox[
       SuperscriptBox["\[Pi]", "2"], "2"]}], ")"}], "-", 
    FractionBox["25", "9"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CF", " ", "=", " ", 
   RowBox[{"4", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CA", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bq", " ", "=", 
   RowBox[{
    RowBox[{"-", "3"}], "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Bg", "[", "NF_", "]"}], ":=", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"33", "-", 
      RowBox[{"2", "NF"}]}], "36"]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.649450754317288*^9, 3.6494507789012547`*^9}, {
   3.649450901659834*^9, 3.6494509162975693`*^9}, {3.6494509649594803`*^9, 
   3.6494509726410027`*^9}, {3.649451290356018*^9, 3.649451329357836*^9}, {
   3.64945140672604*^9, 3.649451421852995*^9}, 3.649458611526113*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Angularites:  Perturbative Cumulative Distribution", "Subsection",
 CellChangeTimes->{{3.649448340471403*^9, 3.6494483466665792`*^9}, {
  3.649451380804503*^9, 3.649451392298221*^9}, {3.649451429264934*^9, 
  3.649451434407741*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AngularitiesMasterCumulative", "[", 
   RowBox[{
   "\[Tau]1_", ",", " ", "Cfactor_", ",", " ", "Bfactor_", ",", 
    "\[Alpha]sCR_", ",", "  ", "R_", ",", " ", "Q_", ",", " ", "use2loop_", 
    ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "L", ",", " ", "\[Alpha]s", ",", "\[Lambda]", ",", " ", "r", ",", "T", 
      ",", "Talt", ",", "dr", ",", "ANS", ",", " ", "kt"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"kt", " ", "=", " ", 
      RowBox[{"Q", "*", " ", 
       RowBox[{"R", " ", "/", "2.0"}]}]}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "factor", " ", "of", " ", "two", " ", "because", " ", "jet", " ", 
        "energy", " ", "is", " ", "half", " ", "of", " ", "collision", " ", 
        "energy", " ", "in", " ", "e"}], "+", "e", "-"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"L", "=", 
      RowBox[{"Log", "[", 
       FractionBox["1", "\[Tau]1"], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]s", "=", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", "\[Alpha]sCR"], "+", 
         RowBox[{
          FractionBox["23", 
           RowBox[{"6", "\[Pi]"}]], 
          RowBox[{"Log", "[", 
           FractionBox["kt", "mZ"], "]"}]}], "+", 
         RowBox[{
          FractionBox["116", 
           RowBox[{"92", "\[Pi]"}]], 
          RowBox[{"Log", "[", 
           RowBox[{"1", "+", 
            RowBox[{
             FractionBox["23", 
              RowBox[{"6", "\[Pi]"}]], "\[Alpha]sCR", " ", 
             RowBox[{"Log", "[", 
              FractionBox["kt", "mZ"], "]"}]}]}], "]"}]}]}], ")"}], 
       RowBox[{"-", "1"}]]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Lambda]", "=", 
      RowBox[{"\[Alpha]s", "*", "\[Beta]0", "*", "L"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{
       RowBox[{
        FractionBox["L", 
         RowBox[{"2", "\[Pi]", " ", "\[Beta]0", " ", "\[Lambda]", 
          RowBox[{"(", 
           RowBox[{"\[Beta]", "-", "1"}], ")"}]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", "\[Lambda]"}]}], ")"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             RowBox[{"2", "\[Lambda]"}]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"\[Beta]", "-", 
             RowBox[{"2", "\[Lambda]"}]}], ")"}], 
           RowBox[{"Log", "[", 
            RowBox[{"1", "-", 
             FractionBox[
              RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], "]"}]}]}], ")"}]}], 
       "+", 
       RowBox[{"use2loop", "*", 
        FractionBox["1", 
         RowBox[{"\[Beta]", "-", "1"}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["K", 
            RowBox[{"4", 
             SuperscriptBox["\[Pi]", "2"], 
             SuperscriptBox["\[Beta]0", "2"]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], "]"}]}], "-", 
             RowBox[{"Log", "[", 
              RowBox[{"1", "-", 
               RowBox[{"2", "\[Lambda]"}]}], "]"}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["\[Beta]1", 
            RowBox[{"2", "\[Pi]", " ", 
             SuperscriptBox["\[Beta]0", "3"]}]], 
           RowBox[{"(", 
            RowBox[{
             FractionBox[
              SuperscriptBox[
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", 
                 RowBox[{"2", "\[Lambda]"}]}], "]"}], "2"], "2"], "-", 
             RowBox[{
              FractionBox["\[Beta]", "2"], 
              SuperscriptBox[
               RowBox[{"Log", "[", 
                RowBox[{"1", "-", 
                 FractionBox[
                  RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], "]"}], "2"]}], 
             "+", 
             RowBox[{"Log", "[", 
              RowBox[{"1", "-", 
               RowBox[{"2", "\[Lambda]"}]}], "]"}], "-", 
             RowBox[{"\[Beta]", " ", 
              RowBox[{"Log", "[", 
               RowBox[{"1", "-", 
                FractionBox[
                 RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], "]"}]}]}], 
            ")"}]}]}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"T", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"\[Pi]", " ", "\[Beta]0"}]]}], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         RowBox[{"2", "\[Lambda]"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Talt", "=", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", 
         RowBox[{"\[Pi]", " ", "\[Beta]0"}]]}], 
       RowBox[{"Log", "[", 
        RowBox[{"1", "-", 
         FractionBox[
          RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dr", "=", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"\[Beta]", "-", "1"}]], 
       RowBox[{"(", 
        RowBox[{"T", "-", "Talt"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ANS", " ", "=", " ", 
      RowBox[{
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "EulerGamma"}], " ", "Cfactor", " ", "dr"}]], 
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "+", 
          RowBox[{"Cfactor", " ", "dr"}]}], "]"}]], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "Cfactor"}], 
         RowBox[{"(", 
          RowBox[{"r", "+", 
           RowBox[{"Bfactor", "  ", "Talt"}]}], ")"}]}]]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Lambda]"}]}], ">", "0"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"1", "-", 
          FractionBox[
           RowBox[{"2", "\[Lambda]"}], "\[Beta]"]}], ">", "0"}], " ", "&&", 
        " ", 
        RowBox[{"\[Alpha]s", ">", "0"}]}], ",", 
       RowBox[{"Evaluate", "[", "ANS", "]"}], ",", "0.0"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.649448356019435*^9, 3.649448579707621*^9}, {
   3.649448641024425*^9, 3.649448685918935*^9}, {3.649448737612549*^9, 
   3.649448761856647*^9}, {3.649448802172345*^9, 3.649448836951989*^9}, {
   3.6494488901190577`*^9, 3.649448947822452*^9}, {3.6494490638049707`*^9, 
   3.649449107483507*^9}, 3.649449163640724*^9, 3.6494492579884653`*^9, {
   3.649449380669765*^9, 3.649449395246296*^9}, {3.649449444510585*^9, 
   3.649449445386024*^9}, {3.64944957396842*^9, 3.649449611578587*^9}, {
   3.649449701218644*^9, 3.6494497265011673`*^9}, {3.64944979136362*^9, 
   3.649449826359898*^9}, {3.649449859904521*^9, 3.649449867143795*^9}, {
   3.649449968729862*^9, 3.649449992978256*^9}, {3.649450091252449*^9, 
   3.6494500945719748`*^9}, {3.6494501952944803`*^9, 3.649450237749467*^9}, {
   3.649450302105363*^9, 3.649450324649276*^9}, {3.649450416182906*^9, 
   3.6494504352038097`*^9}, {3.64945048967739*^9, 3.649450520701152*^9}, {
   3.649450599532997*^9, 3.649450603050994*^9}, {3.649450788875886*^9, 
   3.6494508896682043`*^9}, {3.6494509793026533`*^9, 
   3.6494511716315393`*^9}, {3.649451246772215*^9, 3.649451252891571*^9}, {
   3.6494512945591297`*^9, 3.649451299493155*^9}, {3.6494514547115707`*^9, 
   3.649451488411086*^9}, {3.6494520128576107`*^9, 3.649452017183506*^9}, 
   3.649452083470347*^9, {3.649495243119295*^9, 3.649495247219804*^9}, {
   3.649495296427732*^9, 3.6494952984577913`*^9}, {3.649495346513021*^9, 
   3.6494953490112333`*^9}, {3.649496248757071*^9, 3.649496251981192*^9}, {
   3.64949673285763*^9, 3.649496739157728*^9}, {3.649496798226644*^9, 
   3.649496800287643*^9}, {3.649497543494973*^9, 3.649497594886242*^9}, {
   3.649498401054758*^9, 3.6494984014123783`*^9}, {3.649498520987093*^9, 
   3.649498545844339*^9}, {3.6495011446523046`*^9, 3.649501153825981*^9}, {
   3.649501218419484*^9, 3.649501233889264*^9}, {3.6495016783442802`*^9, 
   3.649501697451872*^9}, {3.6495048307878027`*^9, 3.649504838289051*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining Benchmarks", "Subsection",
 CellChangeTimes->{{3.6494514454394007`*^9, 3.649451452151464*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", "Baseline", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<baseline\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<baseline\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "1", ",", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"No", " ", "g"}], " ", "\[Rule]", " ", "qq"}], " ", ",", " ", 
     RowBox[{"only", " ", "gluon", " ", "has", " ", "to", " ", "change"}]}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<nogqq\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "1", ",", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<nogqq\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "0", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "1", ",", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"No", " ", "2", "loop", " ", "effects"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<no2loop\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "0", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<no2loop\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "0", ",", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Q", " ", "sweep"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=50\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "50.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=100\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "100.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=200\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "200.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=400\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "400.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=800\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "800.0", ",", " ", "1", ",", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=50\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "50.0", ",", " ", "1", ",", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=100\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "100.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=200\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "200.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=400\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "400.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<Q=800\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "800.0", ",", "1", ",", " ", 
      "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"R", " ", "sweep"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.2\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.2", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.4\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.4", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.6\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.6", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.8\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.8", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=1.0\>\"", ",", "\"\<quark\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{
     "\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "1.0", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.2\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.2", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.4\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.4", ",", " ", 
      "Q\[LetterSpace]baseline", ",", "1", ",", " ", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.6\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.6", ",", " ", 
      "Q\[LetterSpace]baseline", ",", " ", "1", ",", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=0.8\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "0.8", ",", " ", 
      "Q\[LetterSpace]baseline", ",", "1", ",", " ", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<R=1.0\>\"", ",", "\"\<gluon\>\"", ",", " ", 
      "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      "\[Alpha]sCR\[LetterSpace]baseline", ",", " ", "1.0", ",", " ", 
      "Q\[LetterSpace]baseline", ",", "1", ",", " ", "\[Beta]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"\[Alpha]s", " ", "sweep"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=0.8\>\"", ",", "\"\<quark\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      RowBox[{"0.8", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=0.9\>\"", ",", "\"\<quark\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      RowBox[{"0.9", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.0\>\"", ",", "\"\<quark\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      RowBox[{"1", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.1\>\"", ",", "\"\<quark\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      RowBox[{"1.1", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.2\>\"", ",", "\"\<quark\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CF", ",", " ", "Bq", ",", " ", 
      RowBox[{"1.2", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=0.8\>\"", ",", "\"\<gluon\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      RowBox[{"0.8", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      " ", "1", ",", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=0.9\>\"", ",", "\"\<gluon\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      RowBox[{"0.9", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.0\>\"", ",", "\"\<gluon\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      RowBox[{"1", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.1\>\"", ",", "\"\<gluon\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      RowBox[{"1.1", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesCumulative", "[", 
     RowBox[{
     "\[Tau]1_", ",", "\"\<\[Alpha]/\[Alpha]0=1.2\>\"", ",", "\"\<gluon\>\"", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"AngularitiesMasterCumulative", "[", 
     RowBox[{"\[Tau]1", ",", " ", "CA", ",", " ", 
      RowBox[{"Bg", "[", "NF\[LetterSpace]baseline", "]"}], ",", " ", 
      RowBox[{"1.2", "*", "\[Alpha]sCR\[LetterSpace]baseline"}], ",", " ", 
      "R\[LetterSpace]baseline", ",", " ", "Q\[LetterSpace]baseline", ",", 
      "1", ",", " ", "\[Beta]"}], "]"}]}], "\[IndentingNewLine]"}]}]], "Input",\

 CellChangeTimes->{{3.649451505926403*^9, 3.6494515617717533`*^9}, {
  3.649451872692073*^9, 3.6494518765172167`*^9}, {3.649452026960888*^9, 
  3.649452035734707*^9}, {3.649452086644638*^9, 3.6494521516626453`*^9}, {
  3.649453023162747*^9, 3.649453036488928*^9}, {3.649455749978443*^9, 
  3.649455841313428*^9}, {3.649458624273568*^9, 3.649458638560049*^9}, {
  3.649494384916552*^9, 3.649494668380232*^9}, {3.6495011557219057`*^9, 
  3.649501172432049*^9}, {3.6495012522894278`*^9, 3.649501271010737*^9}, {
  3.649504847340474*^9, 3.6495048805826483`*^9}, {3.649504916056006*^9, 
  3.6495049985410967`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Angularities:  Perturbative Differential Distribution and Lists/Interpolations\
\>", "Subsection",
 CellChangeTimes->{{3.6494514656303663`*^9, 3.649451479710414*^9}, {
  3.6494533408494053`*^9, 3.6494533440964947`*^9}, {3.649504749930027*^9, 
  3.649504761617258*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<NumericalCalculus`\>\"", "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"defining", " ", "generic", " ", "parton"}], "-", "level"}], 
   "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "AngularitiesDifferentialList", ",", " ", 
    "AngularitiesDifferentialInterpolation"}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Have", " ", "to", " ", "start", " ", "with", " ", "zero", " ", "for", " ",
     "this", " ", "to", " ", "work"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]1max", " ", "=", " ", "1.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]1nbins", " ", "=", " ", "1000"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]1diff", " ", "=", " ", 
   FractionBox["\[Tau]1max", "\[Tau]1nbins"]}], ";"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]1order", " ", "=", " ", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AngularitiesDifferentialList", "[", " ", 
    RowBox[{
    "\"\<parton\>\"", ",", "para_", ",", " ", "sample_", ",", " ", 
     "\[Beta]_"}], "]"}], ":=", "  ", 
   RowBox[{
    RowBox[{"AngularitiesDifferentialList", "[", " ", 
     RowBox[{
     "\"\<parton\>\"", ",", " ", "para", ",", " ", "sample", ",", " ", 
      "\[Beta]"}], "]"}], " ", "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "cumlist", ",", " ", "cumlistL", ",", " ", "cumlistR", ",", " ", 
        "centers", ",", " ", "derivs"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cumlist", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Tau]1", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Re", "[", 
               RowBox[{"AngularitiesCumulative", "[", 
                RowBox[{
                "\[Tau]1", " ", ",", " ", "para", ",", " ", "sample", ",", 
                 " ", "\[Beta]"}], "]"}], "]"}], ",", "0.0"}], "]"}]}], "}"}],
           ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Tau]1", ",", 
            FractionBox["\[Tau]1diff", "2.0"], ",", 
            RowBox[{"\[Tau]1max", "-", 
             FractionBox["\[Tau]1diff", "2.0"]}], ",", "\[Tau]1diff"}], 
           "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
       RowBox[{"cumlistL", " ", "=", " ", 
        RowBox[{"Rest", "[", "cumlist", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"cumlistR", " ", "=", " ", 
        RowBox[{"Most", "[", "cumlist", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"centers", " ", "=", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"cumlistL", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
          RowBox[{"cumlistR", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "2"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"derivs", " ", "=", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"cumlistL", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
          RowBox[{"cumlistR", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[Tau]1diff"]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"derivs", " ", "=", "  ", 
        RowBox[{
         RowBox[{
          RowBox[{"Max", "[", 
           RowBox[{"#", ",", "0.0"}], "]"}], "&"}], "/@", " ", "derivs"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"derivs", " ", "=", " ", 
        RowBox[{
         RowBox[{"derivs", "/", 
          RowBox[{"Total", "[", "derivs", "]"}]}], "/", "\[Tau]1diff"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", " ", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"centers", ",", "derivs"}], "}"}], "]"}], " ", ",", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"\[Tau]1max", ",", "0"}], "}"}], "}"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AngularitiesDifferentialInterpolation", "[", 
   RowBox[{
   "type_", ",", " ", "para_", ",", " ", "sample_", ",", " ", "\[Beta]_"}], 
   "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"AngularitiesDifferentialInterpolation", "[", 
    RowBox[{
    "type", ",", " ", "para", ",", " ", "sample", ",", " ", "\[Beta]"}], 
    "]"}], " ", "=", " ", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"AngularitiesDifferentialList", "[", 
      RowBox[{
      "type", ",", " ", "para", ",", " ", "sample", ",", " ", "\[Beta]"}], 
      "]"}], ",", " ", 
     RowBox[{"InterpolationOrder", "\[Rule]", "\[Tau]1order"}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.649451484130787*^9, 3.649451486130031*^9}, 
   3.649452022809372*^9, {3.649453065446897*^9, 3.649453068876487*^9}, {
   3.649453346057413*^9, 3.6494534080075397`*^9}, {3.649453588593273*^9, 
   3.64945370909346*^9}, {3.6494554946257353`*^9, 3.649455529092711*^9}, {
   3.649455610460033*^9, 3.649455635441905*^9}, {3.64945611638693*^9, 
   3.649456123020612*^9}, {3.6494579464449863`*^9, 3.64945800303645*^9}, {
   3.649499647230277*^9, 3.649499686008664*^9}, {3.649500597689501*^9, 
   3.6495006070240917`*^9}, {3.649500697846027*^9, 3.649500700617136*^9}, {
   3.649501174870615*^9, 3.649501184753667*^9}, {3.649501252381937*^9, 
   3.649501252385456*^9}, {3.649501362035721*^9, 3.6495013764418373`*^9}, {
   3.649504744789659*^9, 3.649504775636091*^9}, {3.649505100893407*^9, 
   3.649505149416691*^9}, {3.649505536274866*^9, 3.649505624099634*^9}, {
   3.6495056636428757`*^9, 3.649505696303726*^9}, {3.649505742301055*^9, 
   3.649505779156863*^9}, {3.64950582404753*^9, 3.649505920699402*^9}, {
   3.6495060097405653`*^9, 3.6495060428875113`*^9}, {3.6495061861005163`*^9, 
   3.649506198350851*^9}, {3.649506252833829*^9, 3.649506253334255*^9}, 
   3.649506307630134*^9, {3.649506404813239*^9, 3.649506405293852*^9}, {
   3.649506500386683*^9, 3.649506581231327*^9}, {3.649506657750193*^9, 
   3.6495066719053*^9}, {3.6495067165934353`*^9, 3.649506764686985*^9}, {
   3.649506795262334*^9, 3.649506858841313*^9}, {3.6495079335529213`*^9, 
   3.6495080103967876`*^9}, {3.649508045860894*^9, 3.649508067464583*^9}, {
   3.6495081398946457`*^9, 3.6495081528450947`*^9}, {3.649508191860751*^9, 
   3.649508192154975*^9}, {3.649508286282371*^9, 3.649508371371063*^9}, 
   3.649508403114521*^9, {3.6495084529689713`*^9, 3.649508455581465*^9}, {
   3.649508529941601*^9, 3.649508565609193*^9}, {3.64950888403139*^9, 
   3.649508884753357*^9}, {3.649512970161059*^9, 3.649513105418738*^9}, {
   3.649513149745953*^9, 3.64951315534308*^9}, {3.649513188285129*^9, 
   3.6495133209820967`*^9}, {3.6495133578008738`*^9, 3.649513425127877*^9}, {
   3.649513457723338*^9, 3.6495134577833347`*^9}, {3.649513907012926*^9, 
   3.64951390829908*^9}, 3.649514250943082*^9, {3.649514306698041*^9, 
   3.64951430824798*^9}, {3.649514996655841*^9, 3.649515026605795*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Non-perturbative Corrections", "Subsection",
 CellChangeTimes->{3.649453147139468*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GenericShapeFunction", "[", 
     RowBox[{"\[Delta]_", ",", " ", "\[Delta]0_"}], "]"}], ":=", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"4", "\[Delta]"}], 
      SuperscriptBox["\[Delta]0", "2"]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", "\[Delta]"}], "\[Delta]0"]}]]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GenericShapeCumulative", "[", 
      RowBox[{"\[Delta]_", ",", "\[Delta]0_"}], "]"}], ":=", " ", 
     FractionBox[
      RowBox[{"\[Delta]0", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", " ", "\[Delta]"}], "\[Delta]0"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Delta]"}], "+", "\[Delta]0"}], ")"}]}]}], 
      "\[Delta]0"]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Dividing", " ", "by", " ", "2", " ", "since", " ", "Q", " ", "is", " ", 
      "collision", " ", "energy"}], ",", " ", 
     RowBox[{
     "but", " ", "power", " ", "correction", " ", "is", " ", "related", " ", 
      "to", " ", "jet", " ", "energy"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AngularitiesNonPerturbativeShift", "[", 
      RowBox[{"\[CapitalOmega]0_", ",", "Q_", ",", " ", "\[Beta]_"}], "]"}], ":=",
      " ", 
     FractionBox[
      RowBox[{
       FractionBox["\[CapitalOmega]0", 
        RowBox[{"(", 
         RowBox[{"Q", "/", "2.0"}], ")"}]], " ", "-", " ", 
       RowBox[{
        RowBox[{"(", 
         FractionBox["\[CapitalOmega]0", 
          RowBox[{"(", 
           RowBox[{"Q", "/", "2.0"}], ")"}]], ")"}], "^", "\[Beta]"}]}], 
      RowBox[{"\[Beta]", " ", "-", " ", "1"}]]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "_", "]"}], ":=", " ", 
     "Q\[LetterSpace]baseline"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "\"\<Q=50\>\"", "]"}], ":=", " ", 
     "50"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "\"\<Q=100\>\"", "]"}], ":=", " ", 
     "100"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "\"\<Q=200\>\"", "]"}], ":=", " ", 
     "200"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "\"\<Q=400\>\"", "]"}], ":=", " ", 
     "400"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Q\[LetterSpace]of", "[", "\"\<Q=800\>\"", "]"}], ":=", " ", 
     "800"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[CapitalOmega]0\[LetterSpace]of", "[", "\"\<quark\>\"", "]"}], ":=",
     " ", "\[CapitalOmega]0\[LetterSpace]baseline"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalOmega]0\[LetterSpace]of", "[", "\"\<gluon\>\"", "]"}], 
     ":=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"CA", "/", "CF"}], ")"}], "*", 
      "\[CapitalOmega]0\[LetterSpace]baseline"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShapeCumulative", "[", 
     RowBox[{
     "\[Delta]_", ",", "\"\<hadron\>\"", ",", "para_", ",", " ", "sample_", 
      ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"GenericShapeCumulative", "[", 
     RowBox[{"\[Delta]", ",", 
      RowBox[{"AngularitiesNonPerturbativeShift", "[", 
       RowBox[{
        RowBox[{"\[CapitalOmega]0\[LetterSpace]of", "[", "sample", "]"}], ",", 
        RowBox[{"Q\[LetterSpace]of", "[", "para", "]"}], ",", " ", 
        "\[Beta]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShapeCumulative", "[", 
     RowBox[{
     "\[Delta]_", ",", "\"\<quasi-parton\>\"", ",", "para_", ",", " ", 
      "sample_", ",", " ", "\[Beta]_"}], "]"}], ":=", " ", 
    RowBox[{"GenericShapeCumulative", "[", 
     RowBox[{"\[Delta]", ",", 
      RowBox[{"AngularitiesNonPerturbativeShift", "[", 
       RowBox[{"\[CapitalOmega]0\[LetterSpace]tiny", ",", 
        RowBox[{"Q\[LetterSpace]of", "[", "para", "]"}], ",", " ", 
        "\[Beta]"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Clear", "[", "ShapeDifferentialList", "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShapeDifferentialList", "[", 
     RowBox[{
     "type_", ",", "para_", ",", " ", "sample_", ",", " ", "\[Beta]_"}], 
     "]"}], ":=", "  ", 
    RowBox[{
     RowBox[{"ShapeDifferentialList", "[", 
      RowBox[{
      "type", ",", " ", "para", ",", " ", "sample", ",", " ", "\[Beta]"}], 
      "]"}], " ", "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "cumlist", ",", " ", "cumlistL", ",", " ", "cumlistR", ",", " ", 
         "centers", ",", " ", "derivs"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"cumlist", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", 
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"Re", "[", 
                RowBox[{"ShapeCumulative", "[", 
                 RowBox[{
                 "\[Tau]1", " ", ",", "type", ",", " ", "para", ",", " ", 
                  "sample", ",", " ", "\[Beta]"}], "]"}], "]"}], ",", "0.0"}],
               "]"}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"\[Tau]1", ",", 
             FractionBox["\[Tau]1diff", "2.0"], ",", 
             RowBox[{"\[Tau]1max", "-", 
              FractionBox["\[Tau]1diff", "2.0"]}], ",", "\[Tau]1diff"}], 
            "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
        RowBox[{"cumlistL", " ", "=", " ", 
         RowBox[{"Rest", "[", "cumlist", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"cumlistR", " ", "=", " ", 
         RowBox[{"Most", "[", "cumlist", "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"centers", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"cumlistL", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], " ", "+", " ", 
           RowBox[{"cumlistR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "2"]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"derivs", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"cumlistL", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
           RowBox[{"cumlistR", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "\[Tau]1diff"]}], ";",
         "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"next", " ", "two", " ", "steps", " ", "probably", " ", 
           RowBox[{"aren", "'"}], "t", " ", "needed"}], ",", " ", 
          RowBox[{"but", " ", "putting", " ", "in", " ", "anyways"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"derivs", " ", "=", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"#", ",", "0.0"}], "]"}], "&"}], "/@", " ", "derivs"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"derivs", " ", "=", " ", 
         RowBox[{
          RowBox[{"derivs", "/", 
           RowBox[{"Total", "[", "derivs", "]"}]}], "/", "\[Tau]1diff"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", " ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"centers", ",", "derivs"}], "}"}], "]"}], " ", ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"\[Tau]1max", ",", "0"}], "}"}], "}"}]}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "This", " ", "technique", " ", "only", " ", "works", " ", "if", " ", 
      "parton", " ", "and", " ", "shape", " ", "have", " ", "the", " ", 
      "same", " ", "length"}], ",", " ", 
     RowBox[{
     "parton", " ", "and", " ", "shape", " ", "have", " ", "zero", " ", 
      "entries", " ", "at", " ", "0"}], ",", " ", 
     RowBox[{
     "and", " ", "equally", " ", "spaced", " ", "yada", " ", "yada"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AngularitiesDifferentialList", "[", " ", 
     RowBox[{
     "type_", ",", "para_", ",", " ", "sample_", ",", " ", "\[Beta]_"}], 
     "]"}], ":=", "  ", 
    RowBox[{
     RowBox[{"AngularitiesDifferentialList", "[", " ", 
      RowBox[{
      "type", ",", " ", "para", ",", " ", "sample", ",", " ", "\[Beta]"}], 
      "]"}], "  ", "=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "parton", ",", " ", "shape", ",", "coords", ",", " ", "values", ",", 
         " ", "total", ",", " ", "shifted"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"parton", " ", "=", " ", 
         RowBox[{"AngularitiesDifferentialList", "[", " ", 
          RowBox[{
          "\"\<parton\>\"", ",", " ", "para", ",", " ", "sample", ",", " ", 
           "\[Beta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"shape", " ", "=", " ", 
         RowBox[{"ShapeDifferentialList", "[", 
          RowBox[{
          "type", ",", " ", "para", ",", " ", "sample", ",", " ", "\[Beta]"}],
           "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{
          "This", " ", "technique", " ", "only", " ", "works", " ", "if", " ",
            "parton", " ", "and", " ", "shape", " ", "have", " ", "the", " ", 
           "same", " ", "length"}], ",", " ", 
          RowBox[{
          "parton", " ", "and", " ", "shape", " ", "have", " ", "zero", " ", 
           "entries", " ", "at", " ", "0"}], ",", " ", 
          RowBox[{
          "and", " ", "equally", " ", "spaced", " ", "yada", " ", "yada"}]}], 
         " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"coords", " ", "=", " ", 
         RowBox[{"parton", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"values", " ", "=", "  ", 
         RowBox[{"parton", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"total", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", " ", 
             RowBox[{"Length", "[", "parton", "]"}]}], "}"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", " ", 
          RowBox[{"i", " ", "<", " ", 
           RowBox[{"Length", "[", "shape", "]"}]}], ",", " ", 
          RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"total", " ", "+=", " ", 
            RowBox[{
             RowBox[{"shape", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], "*", "values", "*", 
             "\[Tau]1diff"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"values", " ", "=", " ", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "0", "}"}], ",", 
              RowBox[{"Most", "[", "values", "]"}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"coords", ",", "total"}], "}"}], "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.64945317342658*^9, 3.649453197129045*^9}, {
   3.649453237828951*^9, 3.649453246349206*^9}, {3.649453281333189*^9, 
   3.649453333421726*^9}, 3.649456086576865*^9, {3.64950128999117*^9, 
   3.649501326275659*^9}, {3.6495047774428177`*^9, 3.649504779665213*^9}, 
   3.649505094199485*^9, {3.6495086378322763`*^9, 3.6495086399409523`*^9}, {
   3.649508691330208*^9, 3.649508888731204*^9}, {3.649508922364396*^9, 
   3.6495089982523813`*^9}, {3.649509061661574*^9, 3.6495092333761272`*^9}, 
   3.649512573938239*^9, {3.649512697650901*^9, 3.649512721939842*^9}, {
   3.649512799778858*^9, 3.6495129250006237`*^9}, {3.6495134897166033`*^9, 
   3.649513647089573*^9}, {3.649513687118486*^9, 3.6495138644219723`*^9}, {
   3.649513895318151*^9, 3.649513987439728*^9}, {3.649514023256205*^9, 
   3.649514023374711*^9}, {3.649514056608739*^9, 3.649514060141014*^9}, {
   3.649514108032651*^9, 3.649514131196418*^9}, {3.649514163684473*^9, 
   3.6495141853027143`*^9}, {3.649514221622705*^9, 3.649514239421953*^9}, {
   3.649514315134313*^9, 3.649514341536829*^9}, {3.649515081801425*^9, 
   3.649515089982367*^9}, {3.649515136941574*^9, 3.649515145737012*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Binning and Classifier Separation", "Section",
 CellChangeTimes->{{3.64769106578165*^9, 3.64769107148529*^9}, {
  3.649494767306149*^9, 3.649494768480358*^9}, {3.64949483988579*^9, 
  3.6494948410379553`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"QGClassifierSeparation", "[", 
   RowBox[{"type_", ",", " ", "para_", ",", " ", "\[Beta]_"}], "]"}], ":=", 
  " ", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "quarklist", ",", " ", "gluonlist", ",", "answer", ",", " ", 
      "integrand"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"quarklist", " ", "=", " ", 
      RowBox[{
       RowBox[{"AngularitiesDifferentialList", "[", 
        RowBox[{
        "type", ",", " ", "para", ",", " ", "\"\<quark\>\"", ",", " ", 
         "\[Beta]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gluonlist", " ", "=", " ", 
      RowBox[{
       RowBox[{"AngularitiesDifferentialList", "[", 
        RowBox[{
        "type", ",", " ", "para", ",", " ", "\"\<gluon\>\"", ",", " ", 
         "\[Beta]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"integrand", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "quarklist", " ", "-", " ", "gluonlist", " ", "+", " ", 
           "\[Epsilon]"}], ")"}], "^", "2"}], " ", "/", " ", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
           "quarklist", "+", "gluonlist", " ", "+", " ", "\[Epsilon]"}], 
           ")"}]}], ")"}]}], " ", "/.", " ", 
       RowBox[{"\[Epsilon]", " ", "\[Rule]", " ", "0"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"answer", " ", "=", " ", 
      RowBox[{
       RowBox[{"Total", "[", "integrand", "]"}], "*", "\[Tau]1diff"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.647691075281053*^9, 3.64769111722968*^9}, {
   3.649456451185196*^9, 3.649456462407591*^9}, {3.6494566757066393`*^9, 
   3.649456753193289*^9}, {3.6494567949766273`*^9, 3.649456929137423*^9}, {
   3.649456991074717*^9, 3.649456991142453*^9}, 3.649457063974738*^9, {
   3.649457197580678*^9, 3.6494572353948708`*^9}, {3.649457275952072*^9, 
   3.6494573044871264`*^9}, {3.649457427458797*^9, 3.649457481988365*^9}, {
   3.649457516976143*^9, 3.649457557287038*^9}, {3.649457900392539*^9, 
   3.649457901055746*^9}, {3.649458009219977*^9, 3.649458067734728*^9}, {
   3.649458132118161*^9, 3.649458132748867*^9}, {3.649458287995344*^9, 
   3.649458290918173*^9}, {3.649458492939845*^9, 3.649458495237732*^9}, {
   3.649458568492825*^9, 3.64945856878127*^9}, {3.649458715864262*^9, 
   3.649458719957608*^9}, {3.649459002242371*^9, 3.649459110677607*^9}, {
   3.649459218382419*^9, 3.649459348669064*^9}, {3.6494948439211206`*^9, 
   3.6494948849333773`*^9}, 3.6494949230375147`*^9, {3.649494986613502*^9, 
   3.649494987049238*^9}, {3.649495387918247*^9, 3.6494953903570433`*^9}, {
   3.6494961733383827`*^9, 3.649496199765687*^9}, {3.64949635685713*^9, 
   3.6494963577981157`*^9}, {3.649496388157763*^9, 3.649496388226994*^9}, {
   3.649500732479496*^9, 3.649500745042705*^9}, {3.649500775384665*^9, 
   3.649500775477874*^9}, {3.649501186278555*^9, 3.649501189888281*^9}, {
   3.649502236605839*^9, 3.649502239584813*^9}, {3.649504104428259*^9, 
   3.649504146856732*^9}, {3.6495041817041492`*^9, 3.649504279995002*^9}, {
   3.6495043400879583`*^9, 3.6495044405731163`*^9}, {3.64950460936982*^9, 
   3.649504693436253*^9}, 3.649504741152461*^9, {3.649504787930127*^9, 
   3.6495047880830307`*^9}, {3.649506700778364*^9, 3.649506704703586*^9}, {
   3.649508224714319*^9, 3.649508228848061*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking Partonic Results", "Section",
 CellChangeTimes->{{3.649494694661562*^9, 3.649494701252881*^9}}],

Cell[CellGroupData[{

Cell["Basic Partonic Distribution", "Subsection",
 CellChangeTimes->{{3.649502085902104*^9, 3.6495020891981983`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"beta", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"QGClassifierSeparation", "[", 
  RowBox[{"\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "beta"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"AngularitiesDifferentialInterpolation", "[", 
          RowBox[{
          "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
           "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AngularitiesDifferentialInterpolation", "[", 
          RowBox[{
          "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
           "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AngularitiesDifferentialInterpolation", "[", 
          RowBox[{
          "\"\<quasi-parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
           "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AngularitiesDifferentialInterpolation", "[", 
          RowBox[{
          "\"\<quasi-parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
           "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]1", ",", "0", ",", "\[Tau]1max"}], "}"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Quark/Gluon\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"FrameStyle", " ", "\[Rule]", " ", 
       RowBox[{"Thickness", "[", "Medium", "]"}]}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)(\[Beta] = 0.5)\>\"", ",",
          " ", "\"\<\>\""}], "}"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "300"}], ",", " ", 
      RowBox[{"PlotTheme", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<Scientific\>\"", ",", "\"\<Frame\>\""}], "}"}]}], ",", 
      " ", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "0.8"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
           " ", "-", " ", 
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}]}], 
          ")"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", 
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", "0.000000000001"}], ")"}]}], ")"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Tau]1", ",", "0", ",", "\[Tau]1max"}], "}"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Separation\>\""}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Thick", ",", 
         RowBox[{"Darker", "[", "Green", "]"}]}], "]"}]}], ",", " ", 
      RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
      RowBox[{"FrameStyle", " ", "\[Rule]", " ", 
       RowBox[{"Thickness", "[", "Medium", "]"}]}], ",", " ", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)(\[Beta] = 0.5)\>\"", ",",
          " ", "\"\<\>\""}], "}"}]}], ",", " ", 
      RowBox[{"ImageSize", " ", "\[Rule]", " ", "300"}], ",", " ", 
      RowBox[{"PlotTheme", "\[Rule]", 
       RowBox[{"{", " ", 
        RowBox[{"\"\<Scientific\>\"", ",", "\"\<Frame\>\""}], "}"}]}], ",", 
      " ", 
      RowBox[{"AspectRatio", "\[Rule]", " ", "0.8"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03"}], ",", "1.03"}], "}"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.03"}], ",", "4.03"}], "}"}]}], "}"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.649494707070011*^9, 3.649494727576891*^9}, {
   3.649494896453869*^9, 3.6494949113503637`*^9}, {3.649494951379944*^9, 
   3.649494963954186*^9}, {3.64949499631429*^9, 3.649495003709259*^9}, 
   3.649495049828285*^9, {3.649495150809815*^9, 3.6494951784385977`*^9}, {
   3.6494952797107058`*^9, 3.649495339235239*^9}, {3.649495405346455*^9, 
   3.649495429075988*^9}, {3.649501190080778*^9, 3.649501197921474*^9}, {
   3.649501772076952*^9, 3.649501820848283*^9}, {3.64950185602107*^9, 
   3.6495019196878557`*^9}, {3.6495019498549633`*^9, 3.649502011083747*^9}, {
   3.6495020789624662`*^9, 3.649502203894965*^9}, {3.649502253180831*^9, 
   3.649502449704825*^9}, {3.649506774167387*^9, 3.6495067811407747`*^9}, {
   3.649508160349197*^9, 3.649508176146162*^9}, {3.649508244050734*^9, 
   3.649508259965364*^9}, {3.6495084623039103`*^9, 3.6495085150701*^9}, {
   3.649514448154049*^9, 3.649514470211293*^9}, {3.649515697604043*^9, 
   3.649515704673996*^9}}],

Cell[BoxData["0.2671742351181688`"], "Output",
 CellChangeTimes->{{3.649494725403902*^9, 3.649494729240715*^9}, {
   3.6494949123407097`*^9, 3.6494950104594517`*^9}, 3.6494950506222277`*^9, 
   3.64949511100746*^9, {3.649495153943666*^9, 3.649495182295726*^9}, {
   3.6494952553693447`*^9, 3.649495291028439*^9}, {3.649495339526417*^9, 
   3.649495355677004*^9}, {3.649495392553666*^9, 3.649495429324898*^9}, {
   3.649496178233605*^9, 3.649496202258553*^9}, 3.649496258485815*^9, {
   3.649496361544263*^9, 3.649496390271819*^9}, {3.649497549602405*^9, 
   3.649497602967752*^9}, 3.649498411931355*^9, 3.649498873931871*^9, 
   3.649499694753171*^9, 3.649500613736053*^9, {3.649500675548173*^9, 
   3.64950070493707*^9}, 3.649500747795309*^9, 3.649500777859826*^9, 
   3.6495017357756577`*^9, {3.649501775817204*^9, 3.649501821298787*^9}, {
   3.649501881250553*^9, 3.649501915162353*^9}, {3.649501952225806*^9, 
   3.649502011894314*^9}, 3.649502091180623*^9, {3.64950212643911*^9, 
   3.649502158059339*^9}, 3.6495022041728897`*^9, {3.6495022419221563`*^9, 
   3.649502450112452*^9}, {3.6495041509077797`*^9, 3.64950417569838*^9}, {
   3.649504243357979*^9, 3.649504252125999*^9}, {3.649504282719475*^9, 
   3.649504298623177*^9}, {3.649504634922153*^9, 3.649504696121427*^9}, 
   3.6495047910145493`*^9, 3.649504898471404*^9, 3.649506782456979*^9, {
   3.649506812660449*^9, 3.649506831542006*^9}, 3.649506872342453*^9, {
   3.649508177752207*^9, 3.649508197247737*^9}, {3.649508233703599*^9, 
   3.6495082614330397`*^9}, {3.649508313645926*^9, 3.6495083323987637`*^9}, {
   3.649508382084939*^9, 3.649508411089868*^9}, 3.649508483251821*^9, 
   3.649508515510537*^9, {3.6495085767000217`*^9, 3.649508578020913*^9}, 
   3.649514346785406*^9, 3.64951447078538*^9, {3.649514782653304*^9, 
   3.6495148183410473`*^9}, {3.649514985745954*^9, 3.6495150329185753`*^9}, 
   3.64951510182905*^9, 3.649515160554824*^9, 3.649515259210415*^9, {
   3.649515676190168*^9, 3.649515705780531*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[0.9, 0.36, 0.054], Thickness[Large], Opacity[1.], CapForm[
      "Butt"], LineBox[CompressedData["
1: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
OZc2NzH/Dyr+gZk=
       "]]}, 
     {RGBColor[0.365248, 0.427802, 0.758297], Thickness[Large], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
Mg==
       "]]}, 
     {RGBColor[0.945109, 0.593901, 0.], Thickness[Large], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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
R5s1ihPz9aRlNimO5Wda2d6m+P8BUNkJNw==
       "]]}, 
     {RGBColor[0.645957, 0.253192, 0.685109], Thickness[Large], Opacity[1.], 
      CapForm["Butt"], LineBox[CompressedData["
1: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

       "]]}},
    AspectRatio->0.8,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\"", TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)(\[Beta] = 0.5)\"", 
        TraditionalForm], None}},
    FrameStyle->Thickness[Medium],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    LabelStyle->{FontFamily -> "Times"},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotLabel->FormBox["\"Quark/Gluon\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[
      1.], CapForm["Butt"], LineBox[CompressedData["
1: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
ifFMLS0t+/8ATWYPkA==
       "]]}},
    AspectRatio->0.8,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\"", TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)(\[Beta] = 0.5)\"", 
        TraditionalForm], None}},
    FrameStyle->Thickness[Medium],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    LabelStyle->{FontFamily -> "Times"},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotLabel->FormBox["\"Separation\"", TraditionalForm],
    PlotRange->{{-0.03, 1.03}, {-0.03, 4.03}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{{3.649494725403902*^9, 3.649494729240715*^9}, {
   3.6494949123407097`*^9, 3.6494950104594517`*^9}, 3.6494950506222277`*^9, 
   3.64949511100746*^9, {3.649495153943666*^9, 3.649495182295726*^9}, {
   3.6494952553693447`*^9, 3.649495291028439*^9}, {3.649495339526417*^9, 
   3.649495355677004*^9}, {3.649495392553666*^9, 3.649495429324898*^9}, {
   3.649496178233605*^9, 3.649496202258553*^9}, 3.649496258485815*^9, {
   3.649496361544263*^9, 3.649496390271819*^9}, {3.649497549602405*^9, 
   3.649497602967752*^9}, 3.649498411931355*^9, 3.649498873931871*^9, 
   3.649499694753171*^9, 3.649500613736053*^9, {3.649500675548173*^9, 
   3.64950070493707*^9}, 3.649500747795309*^9, 3.649500777859826*^9, 
   3.6495017357756577`*^9, {3.649501775817204*^9, 3.649501821298787*^9}, {
   3.649501881250553*^9, 3.649501915162353*^9}, {3.649501952225806*^9, 
   3.649502011894314*^9}, 3.649502091180623*^9, {3.64950212643911*^9, 
   3.649502158059339*^9}, 3.6495022041728897`*^9, {3.6495022419221563`*^9, 
   3.649502450112452*^9}, {3.6495041509077797`*^9, 3.64950417569838*^9}, {
   3.649504243357979*^9, 3.649504252125999*^9}, {3.649504282719475*^9, 
   3.649504298623177*^9}, {3.649504634922153*^9, 3.649504696121427*^9}, 
   3.6495047910145493`*^9, 3.649504898471404*^9, 3.649506782456979*^9, {
   3.649506812660449*^9, 3.649506831542006*^9}, 3.649506872342453*^9, {
   3.649508177752207*^9, 3.649508197247737*^9}, {3.649508233703599*^9, 
   3.6495082614330397`*^9}, {3.649508313645926*^9, 3.6495083323987637`*^9}, {
   3.649508382084939*^9, 3.649508411089868*^9}, 3.649508483251821*^9, 
   3.649508515510537*^9, {3.6495085767000217`*^9, 3.649508578020913*^9}, 
   3.649514346785406*^9, 3.64951447078538*^9, {3.649514782653304*^9, 
   3.6495148183410473`*^9}, {3.649514985745954*^9, 3.6495150329185753`*^9}, 
   3.64951510182905*^9, 3.649515160554824*^9, 3.649515259210415*^9, {
   3.649515676190168*^9, 3.649515705880089*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "0.5"}],
     "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "1.001"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "2.0"}],
     "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "0.5"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "1.001"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "2.0"}], 
    "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "0.5"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "1.001"}], "]"}],
    ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<parton\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "2.0"}], 
    "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.649502034889614*^9, 3.6495020380814657`*^9}, 
   3.649502077083468*^9, {3.649502457907233*^9, 3.649502458139805*^9}, {
   3.649504795366952*^9, 3.649504802364279*^9}, {3.649505010628141*^9, 
   3.6495050164730453`*^9}, {3.649514427816242*^9, 3.6495144287812977`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2671742351181688`", ",", "0.2120529286401401`", ",", 
   "0.17993983091971272`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6495024556475554`*^9, 3.649502458880459*^9}, 
   3.649504698945257*^9, 3.6495048033610973`*^9, 3.649504902366597*^9, 
   3.649505016767708*^9, 3.649506876179034*^9, 3.649508590818157*^9, 
   3.649515036540498*^9, 3.6495151031453733`*^9, 3.6495151616973763`*^9, 
   3.649515260496451*^9, 3.649515677662038*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.20375108511498025`", ",", "0.17144938242799468`", ",", 
   "0.15504133881202917`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6495024556475554`*^9, 3.649502458880459*^9}, 
   3.649504698945257*^9, 3.6495048033610973`*^9, 3.649504902366597*^9, 
   3.649505016767708*^9, 3.649506876179034*^9, 3.649508590818157*^9, 
   3.649515036540498*^9, 3.6495151031453733`*^9, 3.6495151616973763`*^9, 
   3.649515260496451*^9, 3.649515678232909*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2798479573508189`", ",", "0.22078723055423885`", ",", 
   "0.18687219793197896`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6495024556475554`*^9, 3.649502458880459*^9}, 
   3.649504698945257*^9, 3.6495048033610973`*^9, 3.649504902366597*^9, 
   3.649505016767708*^9, 3.649506876179034*^9, 3.649508590818157*^9, 
   3.649515036540498*^9, 3.6495151031453733`*^9, 3.6495151616973763`*^9, 
   3.649515260496451*^9, 3.649515678791654*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"beta", " ", "=", " ", "0.5"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Q", " ", "sweep"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<Q=50\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<Q=100\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<Q=200\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<Q=400\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<Q=800\>\"", ",", " ", "beta"}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"R", " ", "sweep"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<R=0.2\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<R=0.4\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<R=0.6\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<R=0.8\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<parton\>\"", ",", " ", "\"\<R=1.0\>\"", ",", " ", "beta"}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"\[Alpha]s", " ", "sweep"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=0.8\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=0.9\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.0\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.1\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.2\>\"", ",", " ", 
     "beta"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.649498977063952*^9, 3.649498984847837*^9}, {
  3.6495024698976717`*^9, 3.649502567752924*^9}, {3.649502652440099*^9, 
  3.649502690410089*^9}}],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.64949898819575*^9, 3.649499705634601*^9, 
  3.649500790533783*^9, 3.6495025035983667`*^9, 3.649502585602929*^9, 
  3.64950269076248*^9, 3.649504702861094*^9, 3.649506878938501*^9, 
  3.649508602624577*^9, 3.649515039310725*^9, 3.64951510428122*^9, 
  3.649515162749558*^9, 3.6495152618829317`*^9, 3.649515678828546*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2883204567775997`", ",", "0.27707588482448714`", ",", 
   "0.2671742351181688`", ",", "0.25841270866642824`", ",", 
   "0.2506227417585177`"}], "}"}]], "Output",
 CellChangeTimes->{3.64949898819575*^9, 3.649499705634601*^9, 
  3.649500790533783*^9, 3.6495025035983667`*^9, 3.649502585602929*^9, 
  3.64950269076248*^9, 3.649504702861094*^9, 3.649506878938501*^9, 
  3.649508602624577*^9, 3.649515039310725*^9, 3.64951510428122*^9, 
  3.649515162749558*^9, 3.6495152618829317`*^9, 3.649515679775474*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.28347593206834365`", ",", "0.2728157281560937`", ",", 
   "0.2671742351181688`", ",", "0.26340977415012745`", ",", 
   "0.2606169276505036`"}], "}"}]], "Output",
 CellChangeTimes->{3.64949898819575*^9, 3.649499705634601*^9, 
  3.649500790533783*^9, 3.6495025035983667`*^9, 3.649502585602929*^9, 
  3.64950269076248*^9, 3.649504702861094*^9, 3.649506878938501*^9, 
  3.649508602624577*^9, 3.649515039310725*^9, 3.64951510428122*^9, 
  3.649515162749558*^9, 3.6495152618829317`*^9, 3.649515680745749*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.24772403174491256`", ",", "0.2578743267037578`", ",", 
   "0.2671742351181688`", ",", "0.2756974662361295`", ",", 
   "0.2835157915425056`"}], "}"}]], "Output",
 CellChangeTimes->{3.64949898819575*^9, 3.649499705634601*^9, 
  3.649500790533783*^9, 3.6495025035983667`*^9, 3.649502585602929*^9, 
  3.64950269076248*^9, 3.649504702861094*^9, 3.649506878938501*^9, 
  3.649508602624577*^9, 3.649515039310725*^9, 3.64951510428122*^9, 
  3.649515162749558*^9, 3.6495152618829317`*^9, 3.6495156817562923`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic Hadronic Distributions", "Subsection",
 CellChangeTimes->{{3.649514362426642*^9, 3.6495143670824013`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"beta", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "beta"}], "]"}],
    ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "beta"}], 
    "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"AngularitiesDifferentialInterpolation", "[", 
         RowBox[{
         "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", "\"\<quark\>\"",
           ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AngularitiesDifferentialInterpolation", "[", 
         RowBox[{
         "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", "\"\<gluon\>\"",
           ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AngularitiesDifferentialInterpolation", "[", 
         RowBox[{
         "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", "\"\<quark\>\"",
           ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AngularitiesDifferentialInterpolation", "[", 
         RowBox[{
         "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", "\"\<gluon\>\"",
           ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}]}], 
      "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1", ",", "0", ",", "\[Tau]1max"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Quark/Gluon\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", " ", "Red"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", " ", "Blue"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", " ", "Red"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", " ", "Blue"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"FrameStyle", " ", "\[Rule]", " ", 
      RowBox[{"Thickness", "[", "Medium", "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)(\[Beta] = 0.5)\>\"", ",", 
        " ", "\"\<\>\""}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", "300"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Scientific\>\"", ",", "\"\<Frame\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"AspectRatio", "\[Rule]", " ", "0.8"}]}], "]"}], 
   "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
           " ", "-", " ", 
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}]}], 
          ")"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", 
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<parton\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", "0.000000000001"}], ")"}]}], ")"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
           " ", "-", " ", 
           RowBox[{
            RowBox[{"AngularitiesDifferentialInterpolation", "[", 
             RowBox[{
             "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", 
              "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}]}], 
          ")"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<quark\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", 
            RowBox[{
             RowBox[{"AngularitiesDifferentialInterpolation", "[", 
              RowBox[{
              "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", 
               "\"\<gluon\>\"", ",", "beta"}], "]"}], "[", "\[Tau]1", "]"}], 
            " ", "+", " ", "0.000000000001"}], ")"}]}], ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Tau]1", ",", "0", ",", "\[Tau]1max"}], "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", " ", "\"\<Separation\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{"Dashed", ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thick", ",", 
          RowBox[{"Darker", "[", "Green", "]"}]}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
     RowBox[{"FrameStyle", " ", "\[Rule]", " ", 
      RowBox[{"Thickness", "[", "Medium", "]"}]}], ",", " ", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Tau]\), \(1\)]\)(\[Beta] = 0.5)\>\"", ",", 
        " ", "\"\<\>\""}], "}"}]}], ",", " ", 
     RowBox[{"ImageSize", " ", "\[Rule]", " ", "300"}], ",", " ", 
     RowBox[{"PlotTheme", "\[Rule]", 
      RowBox[{"{", " ", 
       RowBox[{"\"\<Scientific\>\"", ",", "\"\<Frame\>\""}], "}"}]}], ",", 
     " ", 
     RowBox[{"AspectRatio", "\[Rule]", " ", "0.8"}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03"}], ",", "1.03"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.03"}], ",", "4.03"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "}"}]}], "Input",
 CellChangeTimes->{{3.649514395995236*^9, 3.649514403900399*^9}, {
  3.649514824210655*^9, 3.649514881530892*^9}, {3.649515277502509*^9, 
  3.649515397830011*^9}, {3.649515712308453*^9, 3.6495157144348497`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.2671742351181688`", ",", "0.26146216349545875`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.649515352060276*^9, {3.6495153849091387`*^9, 3.64951539817754*^9}, 
   3.649515682327162*^9, 3.649515714765018*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{{}, {}, 
     {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1: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
OZc2NzH/Dyr+gZk=
       "]]}, 
     {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], CapForm["Butt"], LineBox[CompressedData["
1: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
Mg==
       "]]}, 
     {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], CapForm["Butt"], 
      LineBox[CompressedData["
1:eJxF13c4lX/cB3ApmadSEYWEaKFEKfK+y6hEZVMSGaGkhKyMjGRnFUmyd0iR
ZGevjEiyx8HhVFaFPOe5rufpd/64z/W6ru89Pu/v53uPXdes1U3p6ejoGGmb
//1XNiV/KpvQkqP7v994tva1fm5J/L85WTuDXnMr/LPYsa1Jz7k1//l46+Gc
UG6Tfy57VikVyG37z54e/g5+3F7/bGJL5X7EHf7Ph9eGOuXd/s/0oZJfv9b8
5xevHGPE7CP+uWdy7c6Otsh/vmDEJbQzIOq/6zl/UuzN39h/Zvo2HNSn9eKf
u274UBmz/nNRlalulmjcP+sOpXPT9f7nUF6pmCTp+H/+Y+KjctzkPxtldi03
B//ngzJOV36N/ecm3VK+cxEJ/ywZt6mlv+w/x4wbudlS/vNa8dfizFyJ2GOv
XKN7wFnO0n7dwHP5RPwM+loWPR8s1/ZBK0TCOhGxP5iCvfZFyR1jSCFqohPx
XTlXQml3tVycyq/vl6sTEWC+R9Spq0uOKfzsy+8/EjHP4RK35/yQ3JL04NLL
7UnQPj5uv09hTm7mm4O2hnwSFjzJgS9M1mDgwabcdTeTEGp5ZWBvChPaRVJZ
34YnweFLp57hni2oboTZ9Q9JuNzEbhpxnReFd7rKuMaS4DYgLG3aLogMTusd
9RuS0bxW88pup32Ifb/e3vloMkTUBTV2vJHAY8PY1gOGybgeH7MoKCoNL4Yj
+/t8kxEYGVYm0nEC9ulN3sG5ycgcqoiz7paHxQXTAaInGYf+yBg1VJ+B/tzy
8Z/0KXjL/maXyBtVnI8Kj0jYn4LQwrm+wCB1nJQ78F1TMwWjyp/3FjzUhuRw
pfL6+ymQ/lZgO+B+CSK+l5MKklIw3y1W5ZlwFdtFZ1fNm1NwGTn0OtXXwNbm
d2n7Ygr2bj4rSCkyxaq9wJuGnamwiatwCxKwwM8dRRvvn0lFh2qk0pSSFUbK
1CzF7qQieCV/feKb2+gynajqj0qFfUaPys4RG9SzeOx8XJGKDT1WocVpdvjw
isvp1FQqEpnWdOtZOyBHM6djdksaZI6G8y5KOiP+92nxJNk0DGTtjo9+74qI
2P5H2qZp6Je09EgU8YCv/L0RxqA0tISW5zr/eAAn8ga8e5uGq8FeYnwbvGEo
ITe3gykd7t/NA/Y9egSNrs7zTQfTQXrqWF/FEAAlF6s0V710aG5qP9dcEQTp
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
       "]]}, 
     {RGBColor[0, 0, 1], Thickness[Large], Opacity[1.], CapForm["Butt"], 
      LineBox[CompressedData["
1:eJxF13k4Ff/7P3DOaVEkaUObUEn2pRDnORVStFhDG0VJlC2iFJK0IUlIyL47
JGTfqch6zrFlz5LllKUF8T2f6/r9es8/cz2uueaae2bu+zmv2X7huq4FiY2N
bYydje1/+6MWw40lIwYUtv+3DaUZXujml8f/9wZOmu9bfrV/llRaF/uaX/+f
lRvkqAH85v9c8qpc4Sm/4z/f83h88xG/1z+bOzL5H/IH/rMcOcA10/Y/kwLk
Ozqq/3NEukuYpNOLf27/Rt7W0hT0zyfM+ES2PQn5r57jByTfLYT/M8eXft8u
g4h/Zlz1Zi5P/c95FRZGqRKR/2zUl8TP1vmfA7YohMUqRv3zrLm3trL5fzZL
Ycx/9vvP0vtdz/4e/M91RsVbtV5E/7N8JE99d8l/Dhsyu+s49p+tnJb0vD4U
gzwwTx4/xqvSVGjgL3s9Bns98hY+NG1WUVoaT1SHxkA+ePamhmatSqT27++n
q2Jg3exp9u59jwpH4JE333/EgMxeLWJs9k1lTrF37o1ALCxfhx1U2KqgOvHl
pqHeoVhMqt5Ud/+qqdrjyZOxxDoWVzc0Tk++1lNt3pXAmR0Yi5jq4Y9+BjdV
q2px6XJhLJ5IsD9MPOqnmmvHKOEbjMXlOY0gdYUQ1eQN1zd95I4DT6k2JXxz
imp4/jKnW/vi0B87XfjUpkz1mWl4g7hpHDw3GY5NNdepei3du6fLJw7zxlqu
JRU0Vaekuvt+GXGoYaPc6ns6qnrlhEUP0R4HN7HkM5mbf6qemZ5XniTFI0g/
55aD/YLq8ZDAF9F74mF1oJlaZcFNOUAR/66vHw/lLbmOLfMbKfL95UeXucWj
R/tezYWLgpRdPqdjc2Lj8Wj/mVcWU2IUAYmpRcvP8eC9O6D0qkGewtX0yETg
VzxkegTi7u1SoSw6Cb37tC0BNaIJ57oPqFEmN+WtdtNMgOPdz79lfI9TBkp0
rCTtEvDdyvXIQRt9CsNipKI7JAE95XwBpqUmlI8rPbY9K0uA4bdLZ5dmXKQU
pvO5HhxNQL59qZ0JuxWFqk9tmVqbCP+/q8oZoraUqD+HpWJVEtG51LpzrNuJ
8iK8+6GhRSJaIqTe+La4UXwOOQ8s903EUNgf2WBzT4rrMDfeZyfCUtlYPdHS
h2LzNC7EqjsREus/69Kv+VFMZSnTmziS8Md5O9VD+TlFj0E7XiedBLXy7Mxy
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
       "]]}},
    AspectRatio->0.8,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\"", TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)(\[Beta] = 0.5)\"", 
        TraditionalForm], None}},
    FrameStyle->Thickness[Medium],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    LabelStyle->{FontFamily -> "Times"},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotLabel->FormBox["\"Quark/Gluon\"", TraditionalForm],
    PlotRange->{All, All},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[{{}, {}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
      Opacity[1.], Dashing[{Small, Small}], CapForm["Butt"], 
      LineBox[CompressedData["
1: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
ifFMLS0t+/8ATWYPkA==
       "]]}, 
     {RGBColor[0, 
       NCache[
        Rational[2, 3], 0.6666666666666666], 0], Thickness[Large], Opacity[
      1.], CapForm["Butt"], LineBox[CompressedData["
1:eJxFl3c81f/7/0VDSZGISIqkzESk8tAiMgpJw04poVJWg0QpKWUUmdmjzJDs
lbLPQPY5RvZxkhHi+/rcbr9f7/PHObf77fk6r+fzeY3HdV3bLB30rVlZWFhe
EV//+9WyHmwqGTqjyvL/Pj8/Gll2Cyjg/zMfB/VFlsCxfyyzf2NcuIDhP1Zp
3Jv+WuDSPy55V67oJ3D7Hz966OvyTMDrH1+6zRB4KhD4j/eyvXbLvPEfs75W
aG//+h9HprmGyTgF/eO2YbatFFLwP9az4Bfb+jzkv/PoHpb5tBjxj9k7e190
nYn8xy22jxmrPvzH+RXWxh+ko/6xMT1ZgKXjP369RTEsTvn9P5679Fhb5dJ/
bJHaslD/8j+WO+BmMjvwH9cZFwufDIr5xwpRXA3dJf9x2E8L99uj/zGbbJbs
av5YHJn/IqshZat6zWl5T/jRWGjVck29mnJXJRWe8Zd3iEXE0vZdHrufqu5f
kaD2NTQWwUmRccd35KhGac9OXKiKBX+S9YBry1dV9kDN6AlmLKSK/96T0CWp
zivT5qM3x2Fs+pzF7mN9quOdLkYGR+OwJ+2mR+QlpmqPJ1fG8utxKLDc17gr
YVaVvDORIycwDjpfZY+aS7ChqhaXrxTGoXXwy56gK5zIu9lSwj8Qh40rxLis
yTxI4XMQ/L4uHpf21azc4bYZEV9WOt1Viof6E5fezZ+245V5RKOUeTzCHH2P
ikpLwGvFPskun3ioCR7OF6dIwym5zvtlRjxyXr08Y9+6F1f1rHvU2uLh+XZR
51uVMi7+XlD5xZqA4Cg7dbFPh6AbEhgUI5mAGyOiK3xfHMFhVakJQ8MENN+T
SM58og6F3nKtlfcT0MYrrdfmoYWdPhficuMS8KUhJtE1Rg+bpSeXbOoTUHTS
UEGvSh9rSc/Ob55JgE2tUSAt/wyWnLZ/qtmaiENLB3Tdt5/DL8H89fdPJII/
nHqBom6CvpLT12RuJoJrLDc78JM5WqyHKrpDEvFy6/cDHH2W+L7m4dZXZYlI
Fxpgj0yyRmEav9uRkUR8dGRrlnewQbphOmWSJwnt+dtiqhRs8f6PhmzcwSS4
vnvFavTFHkER3U+NrJOgb1Rc5rzzJnyOOvetepEE0XAlr2PMW3AbXIfPOUlY
3M78TeG8A3N51d+C7Mkw/XBIJtfHFQYtVN06uWTQaLtl9664B/V7dkkPziXD
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
       "]]}},
    AspectRatio->0.8,
    Axes->{False, False},
    AxesLabel->{None, None},
    AxesOrigin->{0, 0},
    DisplayFunction->Identity,
    Frame->{{True, True}, {True, True}},
    FrameLabel->{{
       FormBox["\"\"", TraditionalForm], None}, {
       FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Tau]\\), \\(1\\)]\\)(\[Beta] = 0.5)\"", 
        TraditionalForm], None}},
    FrameStyle->Thickness[Medium],
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->300,
    LabelStyle->{FontFamily -> "Times"},
    Method->{
     "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
      AbsolutePointSize[6], "ScalingFunctions" -> None},
    PlotLabel->FormBox["\"Separation\"", TraditionalForm],
    PlotRange->{{-0.03, 1.03}, {-0.03, 4.03}},
    PlotRangeClipping->True,
    PlotRangePadding->{{0, 0}, {0, 0}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.649515352060276*^9, {3.6495153849091387`*^9, 3.64951539817754*^9}, 
   3.649515682327162*^9, 3.649515714858905*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "0.5"}],
     "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "1.001"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<baseline\>\"", ",", " ", "2.0"}],
     "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "0.5"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "1.001"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<nogqq\>\"", ",", " ", "2.0"}], 
    "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "0.5"}], 
    "]"}], ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "1.001"}], "]"}],
    ",", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<no2loop\>\"", ",", " ", "2.0"}], 
    "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.649515049032934*^9, 3.64951505951795*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.26146216349545875`", ",", "0.27024125252029346`", ",", 
   "0.2229475662593135`"}], "}"}]], "Output",
 CellChangeTimes->{3.6495150618394547`*^9, 3.649515108497416*^9, 
  3.649515166831518*^9, 3.6495152660330563`*^9, 3.649515683456778*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.20427381424203928`", ",", "0.2296037426682397`", ",", 
   "0.19980360356826748`"}], "}"}]], "Output",
 CellChangeTimes->{3.6495150618394547`*^9, 3.649515108497416*^9, 
  3.649515166831518*^9, 3.6495152660330563`*^9, 3.649515684629538*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.26850088811285744`", ",", "0.2798030788577655`", ",", 
   "0.23297164397032427`"}], "}"}]], "Output",
 CellChangeTimes->{3.6495150618394547`*^9, 3.649515108497416*^9, 
  3.649515166831518*^9, 3.6495152660330563`*^9, 3.6495156857943783`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"beta", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Q", " ", "sweep"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<Q=50\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<Q=100\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<Q=200\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<Q=400\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<Q=800\>\"", ",", " ", "beta"}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"R", " ", "sweep"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<R=0.2\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<R=0.4\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<R=0.6\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<R=0.8\>\"", ",", " ", "beta"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"QGClassifierSeparation", "[", 
     RowBox[{"\"\<hadron\>\"", ",", " ", "\"\<R=1.0\>\"", ",", " ", "beta"}], 
     "]"}]}], "}"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"\[Alpha]s", " ", "sweep"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=0.8\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=0.9\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.0\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.1\>\"", ",", " ", 
     "beta"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"QGClassifierSeparation", "[", 
    RowBox[{
    "\"\<hadron\>\"", ",", " ", "\"\<\[Alpha]/\[Alpha]0=1.2\>\"", ",", " ", 
     "beta"}], "]"}]}], "}"}]}], "Input",
 CellChangeTimes->{
  3.649515053976411*^9, {3.6495151060090427`*^9, 3.649515124894999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.19079638731941348`", ",", "0.236555342570929`", ",", 
   "0.26146216349545875`", ",", "0.2708918017862354`", ",", 
   "0.2721324962808853`"}], "}"}]], "Output",
 CellChangeTimes->{3.649515110980402*^9, 3.649515171277307*^9, 
  3.649515270468749*^9, 3.649515687833419*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.278152017517024`", ",", "0.26754262730783357`", ",", 
   "0.26146216349545875`", ",", "0.2572352016579042`", ",", 
   "0.25401357530743934`"}], "}"}]], "Output",
 CellChangeTimes->{3.649515110980402*^9, 3.649515171277307*^9, 
  3.649515270468749*^9, 3.649515689843484*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.23822374300748106`", ",", "0.2507801753271224`", ",", 
   "0.26146216349545875`", ",", "0.2705272808005741`", ",", 
   "0.2781894020350703`"}], "}"}]], "Output",
 CellChangeTimes->{3.649515110980402*^9, 3.649515171277307*^9, 
  3.649515270468749*^9, 3.6495156918677893`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1434, 825},
WindowMargins->{{Automatic, -8}, {-266, Automatic}},
FrontEndVersion->"10.1 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 23, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 174, 2, 64, "Section"],
Cell[CellGroupData[{
Cell[779, 28, 103, 1, 44, "Subsection"],
Cell[885, 31, 1619, 36, 131, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2541, 72, 154, 2, 44, "Subsection"],
Cell[2698, 76, 1650, 50, 243, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4385, 131, 238, 3, 44, "Subsection"],
Cell[4626, 136, 8374, 206, 491, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13037, 347, 109, 1, 44, "Subsection"],
Cell[13149, 350, 20422, 423, 879, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33608, 778, 278, 5, 44, "Subsection"],
Cell[33889, 785, 7462, 166, 597, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41388, 956, 92, 1, 44, "Subsection"],
Cell[41483, 959, 13513, 319, 1158, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55045, 1284, 215, 3, 64, "Section"],
Cell[55263, 1289, 3585, 72, 114, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58885, 1366, 110, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[59020, 1371, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[59162, 1376, 6417, 139, 369, "Input"],
Cell[65582, 1517, 1986, 27, 28, "Output"],
Cell[67571, 1546, 44506, 759, 284, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112114, 2310, 1713, 39, 63, "Input"],
Cell[113830, 2351, 477, 9, 28, "Output"],
Cell[114310, 2362, 479, 9, 28, "Output"],
Cell[114792, 2373, 478, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115307, 2387, 3253, 70, 369, "Input"],
Cell[118563, 2459, 372, 5, 28, "Output"],
Cell[118938, 2466, 547, 10, 28, "Output"],
Cell[119488, 2478, 547, 10, 28, "Output"],
Cell[120038, 2490, 548, 10, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120635, 2506, 118, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[120778, 2511, 7622, 182, 369, "Input"],
Cell[128403, 2695, 253, 6, 28, "Output"],
Cell[128659, 2703, 61942, 1052, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190638, 3760, 1488, 36, 63, "Input"],
Cell[192129, 3798, 283, 6, 28, "Output"],
Cell[192415, 3806, 283, 6, 28, "Output"],
Cell[192701, 3814, 285, 6, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193023, 3825, 3199, 70, 369, "Input"],
Cell[196225, 3897, 316, 7, 28, "Output"],
Cell[196544, 3906, 317, 7, 28, "Output"],
Cell[196864, 3915, 319, 7, 28, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
