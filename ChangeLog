2016-08-02  Gregory Soyez  <soyez@fastjet.fr>

	* MC_LHQG_dijet.cc:
	* MC_LHQG_Zjet.cc:
	normalised the delta(phi) distributions

2016-06-21  Gregory Soyez  <soyez@fastjet.fr>

	* MC_LHQG_dijet.cc:
	* MC_LHQG_Zjet.cc:
	bumped min jet pt to 80% of the Z pt (or the hardest jet pt)

2016-02-16  Gregory Soyez  <soyez@fastjet.fr>

	* compute-efficiencies.py:
	allowed blocks to start with BEGIN (on top of "# BEGIN")

	* produce-Qdependence-avg.py:
	* produce-Rdependence-avg.py:
	fixed bug in computations of averages

2015-10-30  Jesse Thaler  <jthaler@mit.edu>

	* AnalyticResum/QvGAnalytics.nb
	Adding NGL piece to calculation, corresponding yoda/pdf files updated

2015-10-30  Gregory Soyez  <soyez@fastjet.fr>

	* MC_LHQG_Zjet.cc:
	* MC_LHQG_dijet.cc:
	used E-scheme for the initial clustering. Then re-clustered the
	jet with C/A and the WTA scheme to (i) compute the angularities
	and (ii) apply mMDT

	* produce-Qdependence-avg.py:         *** ADDED ***
	* produce-Rdependence-avg.py:         *** ADDED ***
	* post-process.sh:
	added a series of plots with the average of the quark and gluon
	distributions (for the three IRC-safe angulairties)

	* MC_LHQG_dijet.cc:
	restricted the acceptance for particles to -2.5 .. 2.5
	imposed a max rapidity difference of 1 between the 2 jets
	histogrammed the depta phi between the 2 jets as a cross-check

	* README.md:
	fixed the command-line to build the Rivet plugin + added a note
	abbout the link to fastjet-contrib.

	* MC_LHQG_Zjet.cc:
	- added a max rapidity difference between the jet and the Z boson
	- fixed a few compilation bugs in the previous (untested) code

	* README.md:
	small tweaks to the workflow

	* MC_LHQG_Zjet.cc:
	Following the discussion with the group:
	- set the acceptance down to -2.5 .. 2.5
	- used dressed muons (R=0.1) [copied from ATLAS_2011_I928289_Z]
	- added a control plot for the Zjet delta phi distribution

2015-10-23  Gregory Soyez  <soyez@fastjet.fr>

	* MC_LHQG_Zjet.cc:             *** ADDED ***
	* MC_LHQG_dijet.cc:            *** ADDED ***
	added preliminary verasions of the pp analyses
	compared to their ee equivalent:
	- they use the same observables (using pt,DeltaR instead of E,angle)
	- they directly target physics processes, either Z+jet or dijet
	  with no flavour specified initially
	- the cuts change and are slightly different in the two cases
	- we included measures on mMDT jets to have a feeling of the impact

2015-09-18  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Further work improving the text, adding analytic resummation information.

2015-09-15  Jesse Thaler  <jthaler@mit.edu>

	* AnalyticResum/txt2yoda
	. Updated file to use xmin and xmax
	. Updated corresponding analytic results files to match.

2015-09-14  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. adding information about quark/gluon composition at parton level

	* AnalyticResum/QvGAnalytics.nb:
	. First pass at generating analytic histogram files for Yoda processing

2015-08-04  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Adding Sherpa parton-level results to file

	* AnalyticResum/QvGAnalytics.nb:
	. Adding Andrew's mathematica notebook to github

2015-08-03  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Small tweaks (including updating author list)
	. Subsection on LL value of classifier separation

2015-07-23  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	added {quark, gluon, separation} to the plot titles
	[and propagated this to the generator comparison plots]

	* post-process.sh:
	added an extra entry in the HTML summary table that lists the
	variants present for each generator

	* post-process.sh:
	* style-modulations.plot:
	* style-separation.plot:
	* style-variations.plot:     *** ADDED ***
	adapted the style files (and the script) so that the plots can be
	understood outside of the context of the webpages

2015-07-21  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Adding some parton-level figures

	* tex-post-process.sh  *** ADDED ***
	. New script to copy files to tex/figures

2015-07-20  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Putting in more information about generalized angularities
	. Putting in placeholder plots

2015-07-10  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	. Tiny changes, but wanted to upload before going on vacation.


2015-06-26  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	. fixed a few typos
	. generate a plot/index.html file for easier navigation

2015-06-25  Gregory Soyez  <soyez@fastjet.fr>

	* README.md:
	various updated, included a contents table and status info

	* post-process.sh:
	process things separately for the hadron and parton-level results
	Note that this changes the output names for the plots

	Other (smaller) modifications:
	. do not plot individual MC variations if they only contain a single curve
	. revamped a few comments

	* produce-Qdependence-data.py:
	* produce-alphadependence-data.py:
	read the results in the hadron or parto directory instead of "result"

2015-06-16  Jesse Thaler  <jthaler@mit.edu>

	* lh2015_qg.tex:
	Starting to write quark/gluon manifesto, draft paper outline.

2015-06-09  Gregory Soyez  <soyez@fastjet.fr>

	* get-separation.sh:
	returned a "0" separation when the file is not present

	* produce-alphadependence-data.py:
	added the 0.9 and 1.1 factors

	* style-modulations.plot:
	fixed a typo causing issues with alpha_s-dependence plots

	* post-process.sh:
	fixed a bug in generating the "sum" plots, fixed a minor issue in
	a set of titles

2015-06-08  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	only plotted the distributions for R=0.6 results (and Thrust)

	combined all the variations in a unique series of "modulations"
	plots (previous version commented in the script so easy to fold
	back)

	* post-process.sh:
	added comments

	* post-process.sh:
	added a consistency check that the corresponding u & g files are
	different

	(desired_generators): reordered the generators

	* post-process.sh:
	used the latest style files

	* separation.plot -> style-separation.plot:
	renamed

	* style-Qdependence.plot:        *** ADDED ***
	* style-Rdependence.plot:	 *** ADDED ***
	* style-alphadependence.plot:    *** ADDED ***
	added some style files for the modulation plots

	* post-process.sh:
	set generator list to Pythia-8205 Sherpa-2.1.1 Vincia-1201
	fixed a small bug introducing a bad behaviour of tha alpha dependence

2015-06-07  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	made sure that "best" comes first

	* post-process.sh:
	* produce-separation-data.py:
	Switched list of generators without Sherpa (until it has the right
	R values)
	Note that Pythia should be moved in a directory including its
	version number

	* produce-Rdependence-data.py:
	fixed output of R values

	* post-process.sh:
	* produce-Qdependence-data.py:
	fixed a few issues

	* MC_LHQG_EE.plot:
	rebinned directly from here

2015-06-06  Gregory Soyez  <soyez@fastjet.fr>

	* produce-Qdependence-data.py:         *** ADDED ***
	* produce-Rdependence-data.py:	       *** ADDED ***
	* produce-alphadependence-data.py:     *** ADDED ***
	added scrpiuts to produce the various dependence results we want to study

	* post-process.sh:
	revamped to match the workflow mentioned in the README
	STILL PRELIMINARY!!!

	* produce-separation-data.py:
	fixes some comments; limited to R=0.6

	* produce-separation-plots.py --> produce-separation-data.py:
	file renamed

	* README.md:
	updated the whole workflow after the meeting in Les Houches on June 6th.
	mentioned that hadron-level is the default
	added a description of what set of plots we want (based on the wiki)

	* MC_LHQG_EE.cc:
	switched to R=0.2, 0.4, 0.6, 0.8, 1.0

	* post-process.sh:
	added the machinery to do multiple energies; added the 800 GeV results

	* MC_LHQG_EE.plot:
	set the log thrust to -8

	* post-process.sh:
	specified explicitly the configuration file

	* produce-separation-plots.py:
	produce separate plots for each of the 3 R values

	* separation.plot:
	* post-process.sh:
	worked on plot cosmetics

	* README.md:
	replaced the request for a 500 GeV run by a 400 GeV one (keeps
	geometric progression);
	added some description of the latest "scripting" work

	* post-process.sh:
	fixed wrong names when processing Herwig results

	* produce-separation-plots.py:
	fixed a bug wit the output file

2015-06-06  Jesse Thaler  <jthaler@mit.edu>

	* compute-efficiencies.py
	Added correct (?) uncertainties for separation plots

2015-06-06  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	added summary plots

	* separation.plot:              *** ADDED ***
	added a file with plotting settings for the summary plots

	* produce-separation-plots.py:  *** ADDED ***
	* get-separation.sh:            *** ADDED ***
	added a simple script that extract an entry from the separation
	tables produced by compute-efficiencies.py and a Pythin script
	that produces yoda files with information useful for summary plots

	* post-process.sh:
	added Herwig++ dipole-shower hadron-level results to the plots

	* post-process.sh:
	added Herwig w. hadronisation
	added a FORCE_PLOTS option which forces only the plots
	fixed a reordering issue

	* MC_LHQG_EE.plot:
	simplified a few things + set a linear y scale for all plots

2015-06-05  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	bugfix: create the rebinned directories if not already present
	included results from the Sherpa runs

	* Sherpa/Run-hgg.dat:            *** ADDED ***
	* Sherpa/Run-zqq.dat:            *** ADDED ***
	* Sherpa/results:                *** ADDED ***
	added cards and results from Sherpa. Njet describes the maximal
	number of additional jets included in the Matrix Elements

	* MC_LHQG_EE.cc:
	added a check that FastJet version is at least 3.1.0

	* README.md:
	updated the desctiption to match the discussion we had on
	Thursday; added a description of the workflow and of the results
	and tools.

	* post-process.sh:               *** ADDED ***
	added a script that (i) generate the separations (ii) do a bit of
	rebinning for aesthetic reasons (iii) produce a bunch of plots

	Note that by default existing files are not overwritten. Use
	FORCE=yes post-process.sh to overwrite everything.

	* yoda-rebin.py:                 *** ADDED ***
	added a simple script to rebin our output histograms
	Watch out: this applies to te specific histograms output byu our
	analysis where different histograms are not rebinned the same way

	* compute-efficiencies.py:
	added a few quality measures according to Jesse's tex file
	[only I1/2" saved as a histogram]

2015-06-04  Jesse Thaler <jthaler@mit.edu>

	* tex/lh2015_qg.tex   *** ADDED ***
	* tex/lh2015_qg.bib   *** ADDED ***
	* jheppub.sty         *** ADDED ***
	* jhep.bst            *** ADDED ***
	added tex file with description of classifier metric

	* tex/figures/roc_curve.pdf       *** ADDED ***
	* tex/figures/truth_overlap.pdf   *** ADDED ***
	add figures to help visualize information quantities to study

2015-06-04  Gregory Soyez  <soyez@fastjet.fr>

	* README.md:
	set the scales to study to multiples of 2

	* MC_LHQG_EE.plot:
	updated to include the labels for what comes out of the latest
	version of the analysis

	* compute-efficiencies.py:
	added a quick python script that computes (as a distribution)
	  (Q(x)-G(x))^2/(Q(x)+G(x))
	for a distribution of x.
	Use as
	  compute-efficiencies.py quark.yoda gluon.yoda output.yoda
	On top of giving the histograms, it also prints the integrated
	efficiencies

	* MC_LHQG_EE.cc:
	revamped the analysis to
	. hardcode much less things
	. include log-scaled binned angulatrity histograms
	. include 3 values of R
	. added thrust (lin and log scales)
	. added total event multiplicity in 4 thrust bins

	* MC_LHQG_EE.plot:
	set the plots axes labels and title

	* README.md:
	added a few items concerning processes and setuops to run [+items
	for discussion]

	* MC_LHQG_EE.cc:                    *** ADDED ***
	Added a Rivet analysis for the ee studies
	It is mostly based on Deepak's MC_LHQG.cc analysis with a few
	fixes (see later entries above) and using directly FastJet to use
	ee anti-kt with the WTA axes.
	The code should automatically adjust the energy threshold for the
	jets to 0.4*Q.

2015-06-03  Gregory Soyez  <soyez@fastjet.fr>

	* Shapes.cc (fastjet_shapes):
	fixed typo in the switch to scalar pt

	* README.md:
	added a description of the first ee and pp studies to implement as
	Rivet routines

	* Shapes.{hh,cc}:
	added Jesse as an author of this

	* Shapes.{hh,cc}:         *** ADDED ***
	added a file containing basic shapes inplementation.
	So far only GeneralisedAngularity

	Shapes live in the fastjet_shapes namespace to reflect the fact
	that they are implemented a fastjet::FunctionOfPseudoJet<double>
	objects (defined as fastjet_shapes::Shape here)



