2015-06-09  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	fixed a bug in generating the "sum" plots, fixed a minor issue in
	a set of titles

2015-06-08  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	only plotted the distributions for R=0.6 results (and Thrust)

	combined all the variations in a unique series of "modulations"
	plots (previous version commented in the script so easy to fold
	back)

	* post-process.sh:
	added comments

	* post-process.sh:
	added a consistency check that the corresponding u & g files are
	different

	(desired_generators): reordered the generators

	* post-process.sh:
	used the latest style files

	* separation.plot -> style-separation.plot:
	renamed

	* style-Qdependence.plot:        *** ADDED ***
	* style-Rdependence.plot:	 *** ADDED ***
	* style-alphadependence.plot:    *** ADDED ***
	added some style files for the modulation plots

	* post-process.sh:
	set generator list to Pythia-8205 Sherpa-2.1.1 Vincia-1201
	fixed a small bug introducing a bad behaviour of tha alpha dependence

2015-06-07  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	made sure that "best" comes first

	* post-process.sh:
	* produce-separation-data.py:
	Switched list of generators without Sherpa (until it has the right
	R values)
	Note that Pythia should be moved in a directory including its
	version number

	* produce-Rdependence-data.py:
	fixed output of R values

	* post-process.sh:
	* produce-Qdependence-data.py:
	fixed a few issues

	* MC_LHQG_EE.plot:
	rebinned directly from here

2015-06-06  Gregory Soyez  <soyez@fastjet.fr>

	* produce-Qdependence-data.py:         *** ADDED ***
	* produce-Rdependence-data.py:	       *** ADDED ***
	* produce-alphadependence-data.py:     *** ADDED ***
	added scrpiuts to produce the various dependence results we want to study

	* post-process.sh:
	revamped to match the workflow mentioned in the README
	STILL PRELIMINARY!!!

	* produce-separation-data.py:
	fixes some comments; limited to R=0.6

	* produce-separation-plots.py --> produce-separation-data.py:
	file renamed

	* README.md:
	updated the whole workflow after the meeting in Les Houches on June 6th.
	mentioned that hadron-level is the default
	added a description of what set of plots we want (based on the wiki)

	* MC_LHQG_EE.cc:
	switched to R=0.2, 0.4, 0.6, 0.8, 1.0

	* post-process.sh:
	added the machinery to do multiple energies; added the 800 GeV results

	* MC_LHQG_EE.plot:
	set the log thrust to -8

	* post-process.sh:
	specified explicitly the configuration file

	* produce-separation-plots.py:
	produce separate plots for each of the 3 R values

	* separation.plot:
	* post-process.sh:
	worked on plot cosmetics

	* README.md:
	replaced the request for a 500 GeV run by a 400 GeV one (keeps
	geometric progression);
	added some description of the latest "scripting" work

	* post-process.sh:
	fixed wrong names when processing Herwig results

	* produce-separation-plots.py:
	fixed a bug wit the output file

2015-06-06  Jesse Thaler  <jthaler@mit.edu>

	* compute-efficiencies.py
	Added correct (?) uncertainties for separation plots

2015-06-06  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	added summary plots

	* separation.plot:              *** ADDED ***
	added a file with plotting settings for the summary plots

	* produce-separation-plots.py:  *** ADDED ***
	* get-separation.sh:            *** ADDED ***
	added a simple script that extract an entry from the separation
	tables produced by compute-efficiencies.py and a Pythin script
	that produces yoda files with information useful for summary plots

	* post-process.sh:
	added Herwig++ dipole-shower hadron-level results to the plots

	* post-process.sh:
	added Herwig w. hadronisation
	added a FORCE_PLOTS option which forces only the plots
	fixed a reordering issue

	* MC_LHQG_EE.plot:
	simplified a few things + set a linear y scale for all plots

2015-06-05  Gregory Soyez  <soyez@fastjet.fr>

	* post-process.sh:
	bugfix: create the rebinned directories if not already present
	included results from the Sherpa runs

	* Sherpa/Run-hgg.dat:            *** ADDED ***
	* Sherpa/Run-zqq.dat:            *** ADDED ***
	* Sherpa/results:                *** ADDED ***
	added cards and results from Sherpa. Njet describes the maximal
	number of additional jets included in the Matrix Elements

	* MC_LHQG_EE.cc:
	added a check that FastJet version is at least 3.1.0

	* README.md:
	updated the desctiption to match the discussion we had on
	Thursday; added a description of the workflow and of the results
	and tools.

	* post-process.sh:               *** ADDED ***
	added a script that (i) generate the separations (ii) do a bit of
	rebinning for aesthetic reasons (iii) produce a bunch of plots

	Note that by default existing files are not overwritten. Use
	FORCE=yes post-process.sh to overwrite everything.

	* yoda-rebin.py:                 *** ADDED ***
	added a simple script to rebin our output histograms
	Watch out: this applies to te specific histograms output byu our
	analysis where different histograms are not rebinned the same way

	* compute-efficiencies.py:
	added a few quality measures according to Jesse's tex file
	[only I1/2" saved as a histogram]

2015-06-04  Jesse Thaler <jthaler@mit.edu>

	* tex/lh2015_qg.tex   *** ADDED ***
	* tex/lh2015_qg.bib   *** ADDED ***
	* jheppub.sty         *** ADDED ***
	* jhep.bst            *** ADDED ***
	added tex file with description of classifier metric

	* tex/figures/roc_curve.pdf       *** ADDED ***
	* tex/figures/truth_overlap.pdf   *** ADDED ***
	add figures to help visualize information quantities to study

2015-06-04  Gregory Soyez  <soyez@fastjet.fr>

	* README.md:
	set the scales to study to multiples of 2

	* MC_LHQG_EE.plot:
	updated to include the labels for what comes out of the latest
	version of the analysis

	* compute-efficiencies.py:
	added a quick python script that computes (as a distribution)
	  (Q(x)-G(x))^2/(Q(x)+G(x))
	for a distribution of x.
	Use as
	  compute-efficiencies.py quark.yoda gluon.yoda output.yoda
	On top of giving the histograms, it also prints the integrated
	efficiencies

	* MC_LHQG_EE.cc:
	revamped the analysis to
	. hardcode much less things
	. include log-scaled binned angulatrity histograms
	. include 3 values of R
	. added thrust (lin and log scales)
	. added total event multiplicity in 4 thrust bins

	* MC_LHQG_EE.plot:
	set the plots axes labels and title

	* README.md:
	added a few items concerning processes and setuops to run [+items
	for discussion]

	* MC_LHQG_EE.cc:                    *** ADDED ***
	Added a Rivet analysis for the ee studies
	It is mostly based on Deepak's MC_LHQG.cc analysis with a few
	fixes (see later entries above) and using directly FastJet to use
	ee anti-kt with the WTA axes.
	The code should automatically adjust the energy threshold for the
	jets to 0.4*Q.

2015-06-03  Gregory Soyez  <soyez@fastjet.fr>

	* Shapes.cc (fastjet_shapes):
	fixed typo in the switch to scalar pt

	* README.md:
	added a description of the first ee and pp studies to implement as
	Rivet routines

	* Shapes.{hh,cc}:
	added Jesse as an author of this

	* Shapes.{hh,cc}:         *** ADDED ***
	added a file containing basic shapes inplementation.
	So far only GeneralisedAngularity

	Shapes live in the fastjet_shapes namespace to reflect the fact
	that they are implemented a fastjet::FunctionOfPseudoJet<double>
	objects (defined as fastjet_shapes::Shape here)



